@inject WalletStorage walletStorage;
@using Microsoft.AspNetCore.Components;

<div class="currency-card">
  <div class="currency-card__selected-currency">
    <i class="icon currency-icon-big @(walletStorage.SelectedCurrency.Description.ToLower())" />
    <span>
      <div class="currency-card__currency-value">
        @(walletStorage.SelectedCurrencyData.Balance) <span class="currency-card__currency-value-desc">@walletStorage.SelectedCurrency.Name</span>
      </div>
      <div class="currency-card__dollar-value">
        $@(walletStorage.SelectedCurrencyData.DollarValue) <span class="currency-card__dollar-value-desc">USD</span>
      </div>
    </span>
  </div>
  <div class="currency-card__buttons">
    <NavigateButton OnClick="OnSendClick" Variant="small">Send</NavigateButton>
    <NavigateButton OnClick="OnReceiveClick" Variant="small">Receive</NavigateButton>
    <NavigateButton OnClick="OnConvertClick" Variant="small">Convert</NavigateButton>
    <NavigateButton OnClick="OnUpdateClick" Variant="small">Update</NavigateButton>
  </div>
</div>

@code {
  [Parameter]
  public EventCallback OnSendClick { get; set; }

  [Parameter]
  public EventCallback OnReceiveClick { get; set; }

  [Parameter]
  public EventCallback OnConvertClick { get; set; }

  [Parameter]
  public EventCallback OnUpdateClick { get; set; }

  [Parameter]
  public decimal CurrencyAmount { get; set; }


  protected override void OnInitialized()
  {
    walletStorage.RefreshRequested += StateHasChanged;
  }
}