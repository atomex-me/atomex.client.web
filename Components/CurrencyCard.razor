@inject WalletStorage walletStorage;
@using Microsoft.AspNetCore.Components;

  <div class="loading-container">
    @if (IsLoading) {
      <Loader />
    }
    <div class="currency-card @(IsTezos ? "for-tezos" : "") @(IsLoading ? "loading" : "")">
      <div class="currency-card__selected-currency">
        <i class="icon currency-icon-big @(walletStorage.SelectedCurrency.Description.ToLower())" />
        <span>
          <div class="currency-card__currency-value">
            @(IsLoading ? "Updating " : Helper.DecimalToStr(walletStorage.SelectedCurrencyData.Balance, walletStorage.SelectedCurrency.Format)) <span class="currency-card__currency-value-desc">@walletStorage.SelectedCurrency.Name</span>
          </div>
          @if (!IsLoading) {
            <div class="currency-card__dollar-value">
              $@(Helper.DecimalToStr(walletStorage.SelectedCurrencyData.DollarValue, "F2")) <span class="currency-card__dollar-value-desc">USD</span>
            </div>
          }
        </span>
      </div>
      <div class="currency-card__buttons">
        <NavigateButton OnClick="OnSendClick" Variant="small">Send</NavigateButton>
        <NavigateButton OnClick="OnReceiveClick" Variant="small">Receive</NavigateButton>
        <NavigateButton OnClick="OnConvertClick" Variant="small">Convert</NavigateButton>
        <NavigateButton OnClick="OnUpdateClick" Variant="small">Update</NavigateButton>
        <NavigateButton OnClick="OnAddressesClick" Variant="small">Addresses</NavigateButton>
        @* @if(walletStorage.CanBuySelectedCurrency) {
          <NavigateButton OnClick="OnBuyClick" Variant="small">Buy</NavigateButton>
        } *@
      </div>
    </div>
  </div>

@code {
  [Parameter]
  public EventCallback OnSendClick { get; set; }

  [Parameter]
  public EventCallback OnReceiveClick { get; set; }

  [Parameter]
  public EventCallback OnConvertClick { get; set; }

  [Parameter]
  public EventCallback OnUpdateClick { get; set; }

  [Parameter]
  public EventCallback OnAddressesClick { get; set; }

  [Parameter]
  public decimal CurrencyAmount { get; set; }

  [Parameter]
  public bool IsLoading { get; set; }

  [Parameter]
  public bool IsTezos { get; set; }

  private void OnBuyClick() {
    walletStorage.CurrentWalletSection = WalletSection.BuyWithCard;
  }


  protected override void OnInitialized()
  {
    walletStorage.RefreshRequested += StateHasChanged;
  }
}