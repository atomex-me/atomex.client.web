@inject AccountStorage accountStorage;
@inject IJSRuntime JSRuntime;
@inject Blazored.LocalStorage.ILocalStorageService localStorage;

<footer class="wallet-page__footer">
  <div>
    <span class="footer-text version" @onclick="@copyUId">
      Version 1.0.69
    </span>
  </div>
  <div>
    <span class="footer-link footer-text @(!accountStorage.IsQuotesProviderAvailable ? "text-danger" : "")">Rates
      Provider @(accountStorage.IsQuotesProviderAvailable ? "✔️" : "unavailable")</span>
    <span class="footer-link footer-text @(!accountStorage.IsMarketDataConnected ? "text-danger" : "")">Market Data
      @(accountStorage.IsMarketDataConnected ? "✔️" : "unavailable")</span>
    <span class="footer-link footer-text @(!accountStorage.IsExchangeConnected ? "text-danger" : "")">Exchange
      @(accountStorage.IsExchangeConnected ? "✔️" : "unavailable")</span>
    <span id="js-datasaved-ui" class="footer-link footer-text">Data syncronized ✔️</span>
  </div>
</footer>

@code {
  private async void copyUId()
  {
    var userId = await localStorage.GetItemAsync<string>($"uid");
    await JSRuntime.InvokeAsync<string>("copyTextToClipboard", userId);
    //await JSRuntime.InvokeAsync<string>("alert", "Unique app id successfully copied to clipboard.");
  }

  protected override void OnInitialized()
  {
    accountStorage.RefreshUI += StateHasChanged;
  }
}