@inject IJSRuntime JSRuntime;

@if(!String.IsNullOrEmpty(To)) {
    <span class="navigate-button @Variant" disabled="@Disabled">
        <NavLink class="button-link" href="@To">@ChildContent</NavLink>
    </span>
} else {
    <button
        class="navigate-button @Variant"
        @onclick="handleClick"
        disabled="@Disabled"
        type="button"
    >
        @ChildContent
    </button>
}

@code {
    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string Variant { get; set; }

    [Parameter]
    public EventCallback OnClick { get; set; }

    [Parameter]
    public string To { get; set; }

    [Parameter]
    public bool IsSubmit { get; set; }

    private async void handleClick()
    {
      OnClick.InvokeAsync(null).FireAndForget();
      if (IsSubmit)
      {
        await JSRuntime.InvokeVoidAsync("submitPasswordForm");
      }
    }
}