<div class="send-modal__container">
  <div class="dark-background modal-title">
    Send
  </div>

  <div class="modal-subtitle">
    @Translations.InstantlySendingOfCurrency
  </div>

  <CurrencyModalCard />

  <Input
    Description="@Translations.ToAddress"
    InputType="text"
    InputName="sendToAddress"
    Value="@ToAddress"
    OnChange="@SendAddressChange"
    Theme="dark" />

  <Input
    Description="@Translations.Amount" 
    InputType="number" 
    InputName="sendAmount" 
    Value="@Amount.ToString()" 
    OnChange="@SendAmountChange"
    Theme="dark"
    AdditionalRightInfo="$0.00 USD" />
  <Input 
    Description="@Translations.MinersFee" 
    InputType="number" 
    InputName="minersFee" 
    Value="@MinersFee.ToString()" 
    OnChange="@SendMinersFeeChange"
    Theme="dark"
    AdditionalRightInfo="$0.00 USD" />

    <Checkbox Checked="true" Description="@Translations.UseDefaultFee" />

    <div class="modal-buttons-container">
      <div>
        <NavigateButton Variant="left">
            @Translations.Cancel
        </NavigateButton>
        <NavigateButton Variant="right">
            @Translations.Send
        </NavigateButton>
      </div>
    </div>
</div>

@code {

  protected string ToAddress { get; set; } = "";
  protected double Amount { get; set; } = 0;

  protected double GasPrice { get; set; } = 0;

  protected double GasLimit { get; set; } = 0;

  protected double MinersFee { get; set; } = 0;

  protected double Fee { get; set; } = 0;
 
  protected void SendAddressChange(string address) {
    ToAddress = address;
  }

  protected void SendAmountChange(string amount) {
    Amount = Convert.ToDouble(amount);
  }

  protected void SendMinersFeeChange(string minersFee) {
    MinersFee = Convert.ToDouble(minersFee);
    Console.WriteLine(MinersFee);
  }

  I18nText.Translations Translations = new I18nText.Translations();
  protected override async Task OnInitializedAsync()
  {
      Translations = await I18nText.GetTextTableAsync<I18nText.Translations>(this);
      await I18nText.SetCurrentLanguageAsync(UserStorage.LangCodes.en.ToName());
  }
}