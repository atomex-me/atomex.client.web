 @inject UserStorage UserStorage
 
 <button class="wallet-menu__button @(IsActive ? "active" : "")" @onclick="@handleClick">
   <i class="wallet-menu-icon @(Variant.ToName().ToLower())" />
   <span>
     @Translations[Variant.ToName()]
   </span>
 </button>
 
@code {
  [Parameter]
  public WalletSection Variant { get; set; }

  [Parameter]
  public bool IsActive { get; set; }

  [Parameter]
  public EventCallback<WalletSection> OnClick { get; set; }

  private async void handleClick()
  {
    await OnClick.InvokeAsync(Variant);
  }

  I18nText.Translations Translations = new I18nText.Translations();
  protected override async Task OnInitializedAsync()
  {
    Translations = await I18nText.GetTextTableAsync<I18nText.Translations>(this);
    await I18nText.SetCurrentLanguageAsync(UserStorage.LangCodes.en.ToName());
  }
}